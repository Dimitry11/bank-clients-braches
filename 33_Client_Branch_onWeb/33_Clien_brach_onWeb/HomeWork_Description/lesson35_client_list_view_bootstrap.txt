@model IEnumerable<BankWithBD.Models.Person>

@{
    Layout = null;
    int max = (int)ViewBag.MaxPages;
    int current = (int)ViewBag.Page;
    bool isSameSearch = false;
    if (!String.IsNullOrEmpty((string)ViewBag.SearchResult))
    {
        isSameSearch = true;
    }
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <title>Client list</title>
</head>
<body>
    <div class="container">
        <h2>Client list</h2>
        <div class="form-group">
            @Html.ActionLink("Create New", "Registration", null, new { @class = "btn btn-primary" })
        </div>
        <div class="form-group">
            <ul class="pagination">
                @for (int i = 0; i <= max; i++)
                {
                    int viewPage = i + 1;
                    if (i == current)
                    {
                        @:<li class="active"><a href="#">@viewPage</a></li>
                    }
                    else
                    {
                        @:<li><a href="\Home\ClientList?page=@i&search=@ViewBag.SearchResult&IsSameSearch=@isSameSearch.ToString()">@viewPage</a></li>
                    }
                }
            </ul>
        </div>
        <div class="form-group">
            @using (Html.BeginForm("ClientList", "Home", FormMethod.Post))
            {

                <label for="search">Find by name:</label>
                @Html.TextBox("search", (string)ViewBag.SearchResult, new { @class = "form-control", @style = "width:50%;display:inline-block;" })
                <button type="submit" class="btn btn-default" style="margin-bottom:3px;">Search</button>

            }
        </div>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.NumberId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateBirthday)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Location)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NumberId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateBirthday)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Location)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "EditClient", new { id = item.Id }) |
                        @Html.ActionLink("Details", "EditClient", new { id = item.Id, read_only = true }) |
                        @Html.ActionLink("Delete", "DeleteClient", new { id = item.Id })
                    </td>
                </tr>
            }
        </table>
    </div>
</body>
</html>
